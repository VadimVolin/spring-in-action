<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"

       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/lang
        http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- Module Spring JDBC With HIBERNATE-->

    <!--    use JNDI connection-->
    <!--    <jee:jndi-lookup id="dataSource"-->
    <!--                     jndi-name="/jdbc/SpitterDS"-->
    <!--                     resource-ref="true"/>-->

    <!-- use pool of connections jakarta commons database connection pooling -->
    <!--    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">-->
    <!--        <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>-->
    <!--        <property name="url"
    value="jdbc:hsqldb:hsql://localhost:3306/spitter?serverTimezone=UTC&amp;useLegacyDatetimeCode=false"/>-->
    <!--        <property name="username" value="vadim"/>-->
    <!--        <property name="password" value=""/>-->
    <!--        <property name="initialSize" value="5"/>-->
    <!--        <property name="maxActive" value="10"/>-->
    <!--    </bean>-->

    <!--    use jdbc connection -->
    <!--    connect properties file-->

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="jdbc/database.properties"/>
    </bean>

    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">-->
    <!--    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">-->
    <!--        <constructor-arg name="dataSource" ref="dataSource"/>-->
    <!--    </bean>-->

    <!--    <bean id="spitterDAO" class="spitter.data.springjdbc.springdaosupport.JdbcSpitterDAO">-->
    <!--            we can use  property  jdbcTemplate or dataSource,
    but id we comment jdbcTemplate and set in property dataSource Spring auto create JdbcTemplate
     and set them in JdbcDaoSupport-->
    <!--            <property name="jdbcTemplate" ref="jdbcTemplate"/>-->
    <!--                    <property name="dataSource" ref="dataSource"/>-->
    <!--    </bean>-->

    <!--    Spring with Hibernate on jdbc-->

    <!-- Hibernate 4 SessionFactory Bean definition -->
    <!--    <context:component-scan base-package="spitter.data.springjdbc.springplushibernate"/>-->

    <!--    <bean id="hibernate4AnnotatedSessionFactory"-->
    <!--          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">-->
    <!--        <property name="dataSource" ref="dataSource"/>-->
    <!--&lt;!&ndash;        <property name="mappingResources">&ndash;&gt;-->
    <!--&lt;!&ndash;            <list>&ndash;&gt;-->
    <!--&lt;!&ndash;                <value>jdbc/Spitter.hbm.xml</value>&ndash;&gt;-->
    <!--&lt;!&ndash;            </list>&ndash;&gt;-->
    <!--&lt;!&ndash;        </property>&ndash;&gt;-->
    <!--        <property name="packagesToScan">-->
    <!--            <list>-->
    <!--                <value>spitter.data</value>-->
    <!--            </list>-->
    <!--        </property>-->
    <!--        <property name="hibernateProperties">-->
    <!--            <props>-->
    <!--                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>-->
    <!--                <prop key="hibernate.current_session_context_class">thread</prop>-->
    <!--                <prop key="hibernate.show_sql">true</prop>-->
    <!--            </props>-->
    <!--        </property>-->
    <!--    </bean>-->

    <!--    <bean id = "hibernateSpitterDao" class="spitter.data.springjdbc.springplushibernate.HibernateSpitterDao">-->
    <!--    </bean>-->


    <!--    <bean class = "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>-->

    <!--    ________________________________________________________________________________________________-->
    <!--    use JPA and Spring-->

    <!--    after create persistence.xml we create bean with class LicalEntityManagerFactoryBean-->

    <!--    <bean id="emf" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">-->
    <!--        <property name="persistenceUnitName" value="spitter"/>-->
    <!--    </bean>-->

    <!--    after create persistence.xml we create bean with class LicalContainerEntityManagerFactoryBean-->
    <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="database" value="MYSQL"/>
        <property name="showSql" value="true"/>
        <property name="generateDdl" value="false"/>
        <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
        <property name="persistenceUnitName" value="Spitter"></property>
        <property name="packagesToScan" value="spitter.data"></property>
    </bean>

    <bean id="jpaSpitterDao" class="spitter.data.jpa.JpaSpitterDao"/>


    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" name="TransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--    after create persistence.xml we create entityManagerFactory from jndi-->
    <!--    <jee:jndi-lookup id="emf" jndi-name="persistence/spitter"/>-->

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
</beans>